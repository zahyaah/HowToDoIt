1) Pattern 1 (File -> Pattern1.cpp)

Ask the user for the number of rows and columns and print the following pattern. 

00 01 02 03 
10 11 12 13 
20 21 22 23 

---------------------------------------------------------------------------------------------------------------------------------------------------------

2) Pattern 2 (File -> Pattern2.cpp)

Ask the user for the number of rows and columns and print the following pattern. 

1       2       3       4       5
6       7       8       9       10
11      12      13      14      15

---------------------------------------------------------------------------------------------------------------------------------------------------------

3) Trailing Zeroes (File -> TrailingZeroes.cpp)

Ask the user for an integer and return the same, but without trailing zeroes.

Example: 
Input - 127800
Output - 1278 

---------------------------------------------------------------------------------------------------------------------------------------------------------

3) Weight Balance (File -> WeightBalance.cpp)
Source -> CodeChef
No play and eating all day makes your belly fat. This happened to Chef during the lockdown. His weight before the lockdown was w1​ kg (measured on the most accurate hospital machine) and after M months of lockdown, when he measured his weight at home (on a regular scale, which can be inaccurate), he got the result that his weight was w2​ kg (w2​>w1​).

Scientific research in all growing kids shows that their weights increase by a value between x1​ and x2​ kg (inclusive) per month, but not necessarily the same value each month. Chef assumes that he is a growing kid. Tell him whether his home scale could be giving correct results.

Input format - The first line of the input contains a single integer T denoting the number of test cases. 
The description of T test cases follows.
The first and only line of each test case contains five space-separated integers w1​, w2​, x1​, x2​ and M.

Constraints:
1 ≤ T ≤ 10^5
1 ≤ w1 ​< w2 ​≤ 100
100 ≤ x1 ​≤ x2 ​≤ 10
1 ≤ M ≤ 10

Sample input:
5
1 2 1 2 2
2 4 1 2 2
4 8 1 2 2
5 8 1 2 2
1 100 1 2 2

Sample output:
0
1
1
1
0


---------------------------------------------------------------------------------------------------------------------------------------------------------

4) Search Insert Position (File -> SearchInsertPosition.cpp) 
Source -> LeetCode
Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

You must write an algorithm with O(log n) runtime complexity.

Example 1:
Input: nums = [1,3,5,6], target = 5
Output: 2

Example 2:
Input: nums = [1,3,5,6], target = 2
Output: 1

Example 3:
Input: nums = [1,3,5,6], target = 7
Output: 4

Constraints:
1 <= nums.length <= 104
-104 <= nums[i] <= 104
nums contains distinct values sorted in ascending order.
-104 <= target <= 104


---------------------------------------------------------------------------------------------------------------------------------------------------------
5) 
Sometimes some words like "localization" or "internationalization" are so long that writing them many times in one text is quite tiresome.

Let's consider a word too long, if its length is strictly more than 10 characters. All too long words should be replaced with a special abbreviation.

This abbreviation is made like this: we write down the first and the last letter of a word and between them we write the number of letters between the first and the last letters. That number is in decimal system and doesn't contain any leading zeroes.

Thus, "localization" will be spelt as "l10n", and "internationalization» will be spelt as "i18n".

You are suggested to automatize the process of changing the words with abbreviations. At that all too long words should be replaced by the abbreviation and the words that are not too long should not undergo any changes.

Input:
The first line contains an integer n (1 ≤ n ≤ 100). Each of the following n lines contains one word. All the words consist of lowercase Latin letters and possess the lengths of from 1 to 100 characters.

Output:
Print n lines. The i-th line should contain the result of replacing of the i-th word from the input data.

Example: 
Input -
4
word
localization
internationalization
pneumonoultramicroscopicsilicovolcanoconiosis

Output - 
word
l10n
i18n
p43s


---------------------------------------------------------------------------------------------------------------------------------------------------------
